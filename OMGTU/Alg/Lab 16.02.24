//ЛР 16.02.24
//Array: Count, BinSearch, Copy, Find, FindLast, IndexOf, Reverse, Resize, Sort
//ArrayList: Count, BinSearch, Copy, IndexOf, Insert, Reverse, Sort, Add
//SortedList: Add, IndexOf по ключу, по значению, Вывод ключа по индексу, Вывод значения по индексу
using System;
using System.Collections;

namespace Lab_16_02_24
{
    internal class Program
    {
        static void Main()

        {
            bool end_of_prog = false;
            while (!end_of_prog)
            {
                Console.WriteLine("Выберите коллекцию");
                Console.WriteLine("1) Array");
                Console.WriteLine("2) ArrayList");
                Console.WriteLine("3) SortedList");
                Console.WriteLine("0) Выход из программы");
                int col = Convert.ToInt32(Console.ReadLine());
                int i = 0;
                bool end_of_col = false;
                if (col == 1)
                {
                    Console.WriteLine("Создаём array целых чисел");
                    Console.WriteLine("Введите количество элементов");
                    int n_ar = Convert.ToInt32(Console.ReadLine());
                    if (n_ar == 0) { Console.WriteLine("Пустой array, введите данные заново"); continue; }
                    int[] ar = new int[n_ar];
                    Console.WriteLine("Введите элементы");
                    for (int j = 0; j < n_ar; j++) { Console.Write($"[{j}]: "); ar[j] = Convert.ToInt32(Console.ReadLine()); }
                    while (!end_of_col)
                    {
                        Console.WriteLine("Выберите действие");
                        Console.WriteLine("1) Count");
                        Console.WriteLine("2) BinSearch (только для сортированного array)");
                        Console.WriteLine("3) Copy");
                        Console.WriteLine("4) Find");
                        Console.WriteLine("5) FindLast");
                        Console.WriteLine("6) IndexOf");
                        Console.WriteLine("7) Reverse");
                        Console.WriteLine("8) Resize");
                        Console.WriteLine("9) Sort");
                        Console.WriteLine("0) Выход в главное меню");
                        int ar_a = Convert.ToInt32(Console.ReadLine());
                        switch (ar_a)
                        {
                            case 1: Console.WriteLine($"Количество элементов: {ar.Count()}"); break;
                            case 2:
                                Console.WriteLine("Введите элемент, который необходимо найти");
                                int ar_bs = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента: {Array.BinarySearch(ar, ar_bs)}");
                                break;
                            case 3:
                                Console.WriteLine($"Введите индекс элемента, с которого необходимо начать копировать элементы ");
                                int s_arc = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Введите число элементов, которое необходимо скопировать в новый array (не больше {n_ar - s_arc})");
                                int n_arc = Convert.ToInt32(Console.ReadLine());
                                int[] arc = new int[n_arc];
                                Array.Copy(ar, s_arc, arc, 0, n_arc);
                                Console.WriteLine("Новый array: ");
                                i = 0;
                                foreach (int p in arc) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 4:
                                Console.WriteLine("Поиск первого элемента, который больше введённого: ");
                                int ar_ff = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Первое число, которое больше {ar_ff}: {Array.Find(ar, x => x > ar_ff)}");
                                break;
                            case 5:
                                Console.WriteLine("Поиск последнего элемента, который меньше введённого: ");
                                int ar_fl = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Последнее число, которое меньше {ar_fl}: {Array.FindLast(ar, x => x < ar_fl)}");
                                break;
                            case 6:
                                Console.WriteLine("Введите значение элемента array");
                                int ar_t = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента в array: {Array.IndexOf(ar, ar_t)}");
                                break;
                            case 7:
                                Console.WriteLine("Обратный array: ");
                                Array.Reverse(ar);
                                i = 0;
                                foreach (int p in ar) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 8:
                                Console.WriteLine("Введите новый размер array: ");
                                int ar_size = Convert.ToInt32(Console.ReadLine());
                                Array.Resize(ref ar, ar_size);
                                i = 0;
                                foreach (int p in ar) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 9:
                                Console.WriteLine("Отсортированный array: ");
                                Array.Sort(ar);
                                foreach (int p in ar) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 0:
                                end_of_col = true;
                                break;
                        }
                    }
                }
                if (col == 2)
                {
                    Console.WriteLine("Создаём arraylist целых чисел");
                    Console.WriteLine("Введите количество элементов");
                    int n_arl = Convert.ToInt32(Console.ReadLine());
                    if (n_arl == 0) { Console.WriteLine("Пустой arraylist, введите данные заново"); continue; }
                    ArrayList arl = new ArrayList();
                    Console.WriteLine("Введите элементы");
                    for (int j = 0; j < n_arl; j++) { Console.Write($"[{j}]: "); arl.Add(Convert.ToInt32(Console.ReadLine())); }
                    while (!end_of_col)
                    {
                        Console.WriteLine("Выберите действие");
                        Console.WriteLine("1) Count");
                        Console.WriteLine("2) BinSearch (только для сортированного arraylist)");
                        Console.WriteLine("3) CopyTo");
                        Console.WriteLine("4) IndexOf");
                        Console.WriteLine("5) Insert");
                        Console.WriteLine("6) Reverse");
                        Console.WriteLine("7) Sort");
                        Console.WriteLine("8) Add");
                        Console.WriteLine("0) Выход в главное меню");
                        int ar_a = Convert.ToInt32(Console.ReadLine());
                        switch (ar_a)
                        {
                            case 1: Console.WriteLine($"Количество элементов: {arl.Count}"); break;
                            case 2:
                                Console.WriteLine("Введите элемент, который необходимо найти");
                                int arl_bs = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента: {arl.BinarySearch(arl_bs)}");
                                break;
                            case 3:
                                Console.WriteLine($"Введите индекс элемента, с которого необходимо начать копировать элементы ");
                                int s_arlc = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Введите число элементов, которое необходимо скопировать в новый array (не больше {n_arl - s_arlc})");
                                int n_arlc = Convert.ToInt32(Console.ReadLine());
                                int[] arlc = new int[n_arlc];
                                arl.CopyTo(s_arlc, arlc, 0, n_arlc);
                                Console.WriteLine("Новый array: ");
                                i = 0;
                                foreach (int p in arlc) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 4:
                                Console.WriteLine("Введите значение элемента arraylist");
                                int arl_t = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента в arraylist: {arl.IndexOf(arl_t)}");
                                break;
                            case 5:
                                Console.WriteLine("Введите индекс элемента, перед которым необходимо вставить новый: ");
                                int arl_ind = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine("Введите элемент: ");
                                int arl_ins = Convert.ToInt32(Console.ReadLine());
                                arl.Insert(arl_ind, arl_ins);
                                Console.WriteLine($"Изменённый arraylist:");
                                foreach (int p in arl) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 6:
                                Console.WriteLine("Обратный arraylist: ");
                                i = 0;
                                arl.Reverse();
                                foreach (int p in arl) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 7:
                                Console.WriteLine("Отсортированный arraylist: ");
                                arl.Sort();
                                foreach (int p in arl) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 8:
                                Console.WriteLine("Введите добавляемый элемент: ");
                                arl.Add(Convert.ToInt32(Console.ReadLine()));
                                Console.WriteLine("Изменённый arraylist: ");
                                foreach (int p in arl) { Console.WriteLine($"[{i}]: {p}"); i++; }
                                break;
                            case 0:
                                end_of_col = true;
                                break;
                        }
                    }
                }
                if (col == 3)
                {
                    Console.WriteLine("Создаём sortedlist целых чисел");
                    Console.WriteLine("Введите количество элементов");
                    int n_srl = Convert.ToInt32(Console.ReadLine());
                    if (n_srl == 0) { Console.WriteLine("Пустой arraylist, введите данные заново"); continue; }
                    SortedList srl = new SortedList();
                    Console.WriteLine("Введите элементы");
                    int key, value;
                    for (int j = 0; j < n_srl; j++) { Console.Write($"[{j}]: Ключ - "); key = Convert.ToInt32(Console.ReadLine()); Console.Write($" | Значение - "); value = Convert.ToInt32(Console.ReadLine()); srl.Add(key, value); }
                    while (!end_of_col)
                    {
                        Console.WriteLine("Выберите действие");
                        Console.WriteLine("1) Add");
                        Console.WriteLine("2) IndexOfKey");
                        Console.WriteLine("3) IndexOfValue");
                        Console.WriteLine("4) GetKey");
                        Console.WriteLine("5) GetByIndex");
                        Console.WriteLine("0) Выход в главное меню");
                        int ar_a = Convert.ToInt32(Console.ReadLine());
                        switch (ar_a)
                        {
                            case 1:
                                Console.WriteLine("Введите ключ элемента: ");
                                int srl_k = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine("Введите значение элемента: ");
                                int srl_v = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine("Изменённый sortedlist: ");
                                srl.Add(srl_k, srl_v);
                                for (int l = 0; l < srl.Count; l++) { Console.WriteLine($"[{l}]: Ключ - {srl.GetKey(l)} | Значение - {srl.GetByIndex(l)}"); }
                                break;
                            case 2:
                                Console.WriteLine("Введите ключ элемента");
                                int srl_ik = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента: {srl.IndexOfKey(srl_ik)}");
                                break;
                            case 3:
                                Console.WriteLine("Введите значение элемента");
                                int srl_iv = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Индекс элемента: {srl.IndexOfValue(srl_iv)}");
                                break;
                            case 4:
                                Console.WriteLine("Введите индекс элемента");
                                int srl_igk = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Ключ элемента: {srl.GetKey(srl_igk)}");
                                break;
                            case 5:
                                Console.WriteLine("Введите индекс элемента");
                                int srl_igv = Convert.ToInt32(Console.ReadLine());
                                Console.WriteLine($"Значение элемента: {srl.GetByIndex(srl_igv)}");
                                break;
                            case 0:
                                end_of_col = true;
                                break;
                        }
                    }
                }
                if (col == 0) end_of_prog = true;
            }
        }
    }
}
